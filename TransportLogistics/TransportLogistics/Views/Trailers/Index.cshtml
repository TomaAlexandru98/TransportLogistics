

@{
    ViewData["Title"] = "Index";
}

<link href="//cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="//cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<link href="//cdn.datatables.net/buttons/1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="//cdn.datatables.net/select/1.3.1/css/select.dataTables.min.css" rel="stylesheet" />
<script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>

<link href="https://nightly.datatables.net/css/jquery.dataTables.css" rel="stylesheet" type="text/css" />
<script src="https://nightly.datatables.net/js/jquery.dataTables.js"></script>

<link href="https://cdn.datatables.net/select/1.2.1/css/select.dataTables.min.css" rel="stylesheet" type="text/css" />
<script src="https://cdn.datatables.net/select/1.2.1/js/dataTables.select.min.js" type="text/javascript"></script>

<link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css" rel="stylesheet" type="text/css" />
<script src="https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js" type="text/javascript"></script>


<div class="d-flex flex-column flex-md-row">
    <div class="d-flex flex-column flex-grow-1">

    </div>
    <div class="d-flex flex-column ">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <button class="btn-car">
                    <i class="fa fa-trailer"></i>Add Trailer
                </button>

            </div>
        </div>
    </div>
</div>
<table id="Trailer" width="100%">
    <thead>
        <tr>

            <th>G.V.W.R</th>
            <th>Trailer Type</th>

        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Semi-Trailer</td>
            <td>3600 kgr</td>

        </tr>
        <tr>
            <td>Close-coupled Trailer</td>
            <td>6403 kg</td>

        </tr>
    </tbody>
</table>


@section scripts{
    <script>
        var dataObject = null;

        $(document).ready(function () {
            var table = $('#Trailer').DataTable({
                buttons: [{
                    text: "Edit", className: "editButton",
                    extend: "selectedSingle",
                    action: function (e, dt, bt, config) { editRow(e, dt, bt, config); }
                }, {
                    text: "Save",
                    extend: "selectedSingle",
                    action: function (e, dt, bt, config) { saveRow(e, dt, bt, config); }
                }, {
                    text: "Add",
                    action: function (e, dt, bt, config) { addRow(e, dt, bt, config); }
                }, {
                    text: "Delete",
                    extend: "selectedSingle",
                    action: function (e, dt, bt, config) { removeRow(e, dt, bt, config); }
                }],
                dom: "Btp",
                select: "multi"
            });

            var dataObject = table.rows().data();

            // keep the rows from deselection when you click on a textbox
            // this means you have to click between textboxes to change edit rows when more than one is onpen
            $("#Trailer").on("click", "input", function (e) { e.stopPropagation(); return false; });

            table.on('user-select', function (e, dt, type, cell, originalEvent) {

                e.targetObject = originalEvent.target;
                if ($('#Trailer input').length > 0) {
                    e.preventDefault();
                    return false;
                }
            });
            table.on('select', function (e, dt, type, cell, originalEvent) {


                if ($('#Trailer input').length > 0) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        // Adds a new row in edit mode
        function addRow(e, dt, bt, config) {
            if ($('#Trailer input').length > 0) {
                // only one row is allowed to be in edit mode at a time
                return false;
            }
            var $nr = dt.row.add(["", "", "", "", "", ""]).draw(false).nodes().to$();
            $nr.addClass("newRow");
            dt.rows($nr).select();
            $nr.children("td").each(function (i, it) {
                $(it).append("<input type='text'>");
            });
            $(".editButton span").text("Cancel");
            // Puts 
            dt.page("first").draw();
        }

        function removeRow(e, dt, bt, config) {
            var r = dt.rows(".selected").nodes()[0];
            var n = $("td:first", r).text();
            if (!confirm("You are about to remove " + n)) { return; }
            dt.rows(".selected").remove().draw();
        }

        // Save the selected row (assuming its in edit mode)
        function saveRow(e, dt, bt, config) {
            var r = dt.rows(".selected").nodes()[0];

            // if row is not edit mode, just return.
            if ($("input", r).length === 0) { return; }


            var d = dt.rows(".selected").data()[0];
            var containsText = false;
            $(r).children("td").each(function (i, it) {
                var di = $("input", it).val();
                if (di.length > 0) { containsText = true; }
                $(it).html(di);
                d[i] = di;
            });
            if (!containsText) {
                alert("This row contains no data and will be removed");
                dt.rows(".selected").remove().draw();
            }
            $(".editButton span").text("Edit");
        }

        // Puts a row in edit mode
        function editRow(e, dt, bt, config) {
            var r = dt.rows(".selected").nodes()[0];
            if ($("span", bt[0]).text() == "Cancel") {

                if ($(r).hasClass("newRow")) {
                    dt.rows(".selected").remove().draw();
                }
                else {
                    $(r).children("td").each(function (i, it) {
                        var od = dt.cells(it).data();
                        $(it).html(od[0]);
                    });
                }

                $("span", bt[0]).text("Edit");
                return;
            }

            // if row already in edit mode, just return.
            if ($("input", r).length > 0) { return; }

            $(r).children("td").each(function (i, it) {
                var h = $("<input type='text'>");
                h.val(it.innerText);
                $(it).html(h);
            });
            $("span", bt[0]).text("Cancel");
        }
    </script>


}
